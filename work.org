# -*- mode: org; -*-
# Time-stamp: <2020-05-19 Tue 11:35 slumos@slumos-ltm>
#+DESCRIPTION: My nice =~/.config/emacs configuration: stuff for work
#+KEYWORDS:  emacs org
#+LANGUAGE:  en
#+STARTUP: entitiespretty
#+TODO: TODO(t) TRYING(r) BROKEN(t) SKIP(s) | DONE(d)
#+FILETAGS: :emacs:config:
#+CATEGORY: EMACS
#+PROPERTY: header-args    :results silent

* Org
** Config
   #+BEGIN_SRC emacs-lisp
     (setq org-directory "~/Google Drive/Notes")
     (setq slumos-org-directory "~/Sync/OneDrive/ST/Notes")
     (setq org-agenda-files (list
			     (expand-file-name "DMP.org" org-directory)
			     (expand-file-name "config.org" user-emacs-directory)
			     (expand-file-name "Inbox.org" slumos-org-directory)))
   #+END_SRC
** org-ql
   #+begin_src emacs-lisp :tangle no
     (use-package org-ql
       :load-path "~/.config/emacs/org-ql")
   #+end_src
** Capture templates
   #+BEGIN_SRC emacs-lisp
     (setq org-capture-templates
	   (quote
	    (("j" "Journal" entry (file+datetree "~/Sync/OneDrive/ST/Notes/JOURNAL.org")
	      "* %<%R: >%? %^g\n%t")
	     ("k" "linK" entry
	      (id "006AA229-6D16-4C2B-9D56-E8CBA014ED54")
	      "* %U %?")
	     ("l" "Log" entry
	      (id "189F5056-2ACF-4892-A792-54DBB9C34FE1")
	      "* %U {%^{estimate of time spent}} %^{log}%?" :prepend t)
	     ("m" "Meeting" entry
	      (id "C2D75FC0-1685-414B-BB72-C7510B37FAE2"))
	     ("n" "Note" entry
	      (id "FB0D399D-1009-4F21-9D41-FEA95E232B56")
	      "* %^{title} %U%?")
             ("p" "Pager" entry
              (id "198B927A-E59D-4C7B-8E25-CFDAF46D3E3C")
              "* %T %?"
              :prepend t)
	     ("s" "Snippet" entry
	      (id "F4FAAF53-8B41-48E9-BD20-F124545776EB")
	      "* %^{title}: %?")
	     ("t" "Task" entry
	      (id "236EAFF9-52A6-4CDB-9EC3-F4236BBBE7C7")
	      "* TODO %?"))))
   #+END_SRC
** Helpers
   :PROPERTIES:
   :test-property: test-value
   :WORKITEM: test-workitem
   :END:
   #+begin_src emacs-lisp
     (defun slumos-org-copy-current-workitem ()
       "Copy the value of the WORKITEM property"
       (interactive)
       (let ((workitem (org-entry-get (point) "WORKITEM")))
         (kill-new workitem)))
   #+end_src

   #+begin_src emacs-lisp :tangle no
     (slumos-org-copy-current-workitem)
   #+end_src

* Magit
  #+BEGIN_SRC emacs-lisp :results value silent
    (custom-set-variables
      '(magit-repository-directories
          '(("~/Projects" . 1)
            ("~/Projects/datadog" . 1)
            ("~/Projects/java" . 1)
            ("~/Projects/puppet" . 1)
            ("~/Projects/sfdc-slumos" . 1)
            ("~/Projects/tf" . 1))))
  #+END_SRC
* Environment
  #+BEGIN_SRC emacs-lisp
    (exec-path-from-shell-copy-envs
     '("DATADOG_API_KEY"
       "DATADOG_APP_KEY"
       "DYN_CUSTOMER_NAME"
       "DYN_USERNAME"
       "DYN_PASSWORD"))
  #+END_SRC

  #+BEGIN_SRC emacs-lisp
    (defun slumos/import-kaiju-envs ()
      (exec-path-from-shell-copy-envs
       '("KAIJU_OWNER_EMAIL"
         "KAIJU_OWNER_ID"
         "KAIJU_TEAM_NAME"
         "KAIJU_USERNAME"
         "KAIJU_USER_EMAIL"
         "KAIJU_USER_ID"
         "KAIJU_USER_ROLE_ID"
         "KAIJU_REFRESH_TOKEN"
         "KAIJU_ACCESS_TOKEN")))
  #+END_SRC
